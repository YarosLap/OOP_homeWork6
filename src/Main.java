
//        S	SRP
//        Принцип единственной ответственности (single responsibility principle)
//        Для каждого класса должно быть определено единственное назначение. Все ресурсы, необходимые для его осуществления, должны быть инкапсулированы в этот класс и подчинены только этой задаче.
//        O	OCP
//        Принцип открытости/закрытости (open-closed principle)
//        «программные сущности … должны быть открыты для расширения, но закрыты для модификации».
//        L	LSP
//        Принцип подстановки Лисков (Liskov substitution principle)
//        «функции, которые используют базовый тип, должны иметь возможность использовать подтипы базового типа не зная об этом». См. также контрактное программирование.
//        I	ISP
//        Принцип разделения интерфейса (interface segregation principle)
//        «много интерфейсов, специально предназначенных для клиентов, лучше, чем один интерфейс общего назначения».
//        D	DIP
//        Принцип инверсии зависимостей (dependency inversion principle)
//        «Зависимость на Абстракциях. Нет зависимости на что-то конкретное».